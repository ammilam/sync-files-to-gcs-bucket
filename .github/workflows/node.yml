name: Node.js CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - run: npm ci
      - run: npm install pkg -g
      - run: pkg .

  create-tag:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: alpine/git
    steps:
      - run: git config --global --add safe.directory /__w/sync-local-dir-to-gcs-bucket/sync-local-dir-to-gcs-bucket
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Bump version
        uses: PaulHatch/semantic-version@v4.0.2
        id: tag_version_main
        with:
          tag_prefix: "v"
          major_pattern: "BREAKING CHANGE"
          minor_pattern: "feat:"
          format: "${major}.${minor}.${patch}"
          namespace: main
          change_path: "."
          short_tags: false
          bump_each_commit: true
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Tag Release (vX.Y.Z)
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          git tag ${{ steps.tag_version_develop.outputs.version_tag }}
          git push origin ${{ steps.tag_version_develop.outputs.version_tag }}

  # release:
  #   name: "Release"
  #   needs: create-tag
  #   runs-on: "ubuntu-latest"
  #   steps:
  #     - name: "Create release"
  #       uses: "actions/github-script@v5"
  #       with:
  #         github-token: "${{ secrets.GITHUB_TOKEN }}"
  #         script: |
  #           try {
  #             await github.rest.repos.createRelease({
  #               draft: false,
  #               generate_release_notes: true,
  #               name: ${{ needs.create-tag.outputs.new_tag }},
  #               owner: context.repo.owner,
  #               prerelease: false,
  #               repo: context.repo.repo,
  #               tag_name: ${{ needs.create-tag.outputs.new_tag }},
  #             });
  #           } catch (error) {
  #             core.setFailed(error);
  #           }

